loadstring(game:HttpGet("https://raw.githubusercontent.com/EffortlessX/MyScripts/main/UniversalGui"))()
repeat wait() until _G.EXLoaded
local plr = game.Players.LocalPlayer
local ts = game:GetService("TweenService")
local chr = plr.Character
local hrp = chr.HumanoidRootPart
hrp.Size = Vector3.new(hrp.Size.X+1,hrp.Size.Y,hrp.Size.Z+1)
local cam = workspace.CurrentCamera
local mouse = plr:GetMouse()
plr.CharacterAdded:Connect(function(char)
	chr = char
	hrp = char:WaitForChild("HumanoidRootPart")
	hrp.Size = Vector3.new(hrp.Size.X+1,hrp.Size.Y,hrp.Size.Z+1)
	mouse = plr:GetMouse()
end)
local ex = _G.EXFunctions
local cl = _G.EXClient


local tpBool = false
local stpBool = false
local tpBtn
local stpBtn
function cl.Teleport()
	tpBool = not tpBool
	if tpBool and stpBool then
		stpBool = false
		stpBtn.Button.BackgroundColor3 = Color3.fromRGB(200,0,0)
	end
end
tpBtn = ex.CreateRow("Toggle",cl.Teleport,"Right click to teleport")
function cl.SafeTeleport()
	stpBool = not stpBool
	if tpBool and stpBool then
		tpBool = false
		tpBtn.Button.BackgroundColor3 = Color3.fromRGB(200,0,0)
	end
end
stpBtn = ex.CreateRow("Toggle",cl.SafeTeleport,"Right click to 'teleport' (safe teleport)")
mouse.Button2Down:Connect(function()
	if tpBool then
		hrp.CFrame = mouse.Hit * CFrame.new(0,4,0)
	elseif stpBool then
		hrp.Anchored = true
		local hit = mouse.Hit
		local secs = (hrp.Position-Vector3.new(hit.X,hit.Y+4,hit.Z)).Magnitude/500
		ts:Create(hrp,TweenInfo.new(secs,Enum.EasingStyle.Linear,Enum.EasingDirection.In,0,false),{CFrame = hit * CFrame.new(0,3,0)}):Play()
		wait(secs)
		hrp.Anchored = false
	end
end)


local nc1Bool = false
local cant = {}
for i,v in pairs(plr.Character:GetChildren()) do
	if v:IsA("MeshPart") or v:IsA("Part") and v.CanCollide == false then
		table.insert(cant,v)
	end
end
function cl.noclip1()
	nc1Bool = not nc1Bool
	if nc1Bool then
		for i,v in pairs(plr.Character:GetChildren()) do
			if v:IsA("MeshPart") or v:IsA("Part") then
				v.CanCollide = false
			end
		end
	else
		for i,v in pairs(plr.Character:GetChildren()) do
			if v:IsA("MeshPart") or v:IsA("Part") and not table.find(cant,v) then
				v.CanCollide = true
			end
		end
	end
end
ex.CreateRow("Toggle",cl.noclip1,"Noclip - v1")


local nc2Bool = false
local made = {}
hrp.Touched:Connect(function(part)
	if nc2Bool and part.Parent ~= chr and part.Parent.Parent ~= chr and part.Name ~= "XYZFLOOR" then
		part.CanCollide = false
		if not table.find(made,part) then
			table.insert(made,part)
			local floor = Instance.new("Part",workspace)
			floor.Name = "XYZFLOOR"
			floor.Size = Vector3.new(part.Size.X,1,part.Size.Z)
			floor.Position = Vector3.new(part.Position.X,hrp.Position.Y-4,part.Position.Z)
			floor.Transparency = 1
			floor.Anchored = true
		end
	end
end)
function cl.noclip2()
	nc2Bool = not nc2Bool
	if not nc2Bool then
		for i,v in pairs(made) do
			v.CanCollide = true
		end
	end
end
ex.CreateRow("Toggle",cl.noclip2,"Noclip - v2 (experimental)")


function cl.Walkspeed(input)
	chr.Humanoid.Walkspeed = tonumber(input)
end
ex.CreateRow("UserInput",cl.Walkspeed,"Walkspeed")


function cl.JumpHeight(input)
	chr.Humanoid.JumpHeight = tonumber(input)
end
ex.CreateRow("UserInput",cl.JumpHeight,"Jump height")
