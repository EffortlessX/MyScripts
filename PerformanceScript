local players = game:GetService("Players")
local plr = players.LocalPlayer or players.PlayerAdded:Wait()
local chr = plr.Character or plr.CharacterAdded:Wait()
local hrp = chr:WaitForChild("HumanoidRootPart")
plr.CharacterAdded:Connect(function(char)
	chr = char
	hrp = char:WaitForChild("HumanoidRootPart")
end)
local plrs = {}
for i,v in pairs(players:GetChildren()) do
	table.insert(plrs,v.Character or v.CharacterAdded:Wait())
end
local parts = {}
for i,v in pairs(workspace:GetDescendants()) do
	if v:IsA("BasePart") and not table.find(plrs,v.Parent) and v.Transparency < 1 and v.Size.X < 100 and v.Size.Z < 100 then
		table.insert(parts,{v,v.Transparency})
		v.Destroying:Connect(function()
			table.remove(parts,table.find(parts,v))
		end)
	end
end
local lighting = game:GetService("Lighting")
lighting:ClearAllChildren()
lighting.ChildAdded:Connect(function(child)
	wait()
	child:Destroy()
end)
local oldPos = Vector3.new(0,-100,0)
while wait() do
	local pos = hrp.Position
	if (pos-oldPos).Magnitude > 20 then
		oldPos = pos
		for i,v in pairs(parts) do
			local part = v[1]
			task.wait()
			if (part.Position-pos).Magnitude>150 then
				part.Transparency = 1
			else
				part.Transparency = v[2]
			end
		end
	end
end	
