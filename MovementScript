-- HOLD \ OR ; TO UNLOCK MOUSE --

local players = game:GetService("Players")
local uis = game:GetService("UserInputService")
local cam = workspace.CurrentCamera
local plr = players.LocalPlayer or players.PlayerAdded:Wait()
local mouse = plr:GetMouse()
local chr = plr.Character or plr.CharacterAdded:Wait()
local hrp = chr:WaitForChild("HumanoidRootPart")
local hmd = chr:WaitForChild("Humanoid")
plr.CharacterAdded:Connect(function(char)
	chr = char
	hrp = char:WaitForChild("HumanoidRootPart")
	hmd = char:WaitForChild("Humanoid")
	cam = workspace.CurrentCamera
end)

-- CREATING PRESETS --

local presets = Instance.new("Folder")

local toggle = Instance.new("Frame",presets)
toggle.Name = "toggle"
toggle.Visible = false
toggle.BackgroundTransparency = 1
toggle.Size = UDim2.new(1,0,0,15)

local button = Instance.new("ImageButton",toggle)
button.Name = "button"
button.BackgroundTransparency = 1
button.Size = UDim2.new(0,15,1,0)
button.Position = UDim2.new(0.04,0,0,0)
button.Image = "rbxassetid://14300228791"
button.ScaleType = Enum.ScaleType.Fit
button.AutoButtonColor = false

local hider = Instance.new("Frame",button)
hider.Name = "hider"
hider.BackgroundColor3 = Color3.fromRGB(25,25,25)
hider.Size = UDim2.new(0.45,0,0.45,0)
hider.Position = UDim2.new(0.5,0,0.5,0)
hider.AnchorPoint = Vector2.new(0.5,0.5)
hider.BorderSizePixel = 0

local desc = Instance.new("TextLabel",toggle)
desc.Name = "desc"
desc.BackgroundTransparency = 1
desc.Size = UDim2.new(0.8,0,1,0)
desc.Position = UDim2.new(0.15,0,0,0)
desc.TextColor3 = Color3.fromRGB(200,200,200)
desc.TextScaled = true
desc.TextXAlignment = Enum.TextXAlignment.Right

local input = Instance.new("Frame",presets)
input.Name = "input"
input.Visible = false
input.BackgroundTransparency = 1
input.Size = UDim2.new(1,0,0,15)

local box = Instance.new("TextBox",input)
box.Name = "box"
box.BackgroundColor3 = Color3.fromRGB(35,35,35)
box.Size = UDim2.new(0,35,1,0)
box.Position = UDim2.new(0.02,0,0,0)
box.TextColor3 = Color3.fromRGB(200,200,200)
box.Text = ""
box.TextScaled = true
Instance.new("UICorner",box).CornerRadius = UDim.new(0.3,0)

local desc = Instance.new("TextLabel",input)
desc.Name = "desc"
desc.BackgroundTransparency = 1
desc.Size = UDim2.new(0.8,0,1,0)
desc.Position = UDim2.new(0.15,0,0,0)
desc.TextColor3 = Color3.fromRGB(200,200,200)
desc.TextScaled = true
desc.TextXAlignment = Enum.TextXAlignment.Right

-- CREATING GUI --

local gui = Instance.new("ScreenGui",plr.PlayerGui)
gui.Name = "MovementHacks"
gui.ResetOnSpawn = false
gui.DisplayOrder = 99999
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local modalButton = Instance.new("TextButton",gui)
modalButton.Text = ""
modalButton.Modal = true
modalButton.BackgroundTransparency = 1
modalButton.Size = UDim2.new(1,0,1,0)
modalButton.ZIndex = 0
modalButton.Visible = false

local bg = Instance.new("Frame",gui)
bg.BackgroundColor3 = Color3.fromRGB(25,25,25)
bg.Size = UDim2.new(0.2,0,0.5,0)
bg.Position = UDim2.new(0.73,0,0.967,0)
bg.ClipsDescendants = true
Instance.new("UICorner",bg).CornerRadius = UDim.new(0.03,0)
Instance.new("UIStroke",bg)

local top = Instance.new("Frame",bg)
top.Size = UDim2.new(1.02,0,0.06,0)
top.Position = UDim2.new(-0.01,0,0,0)
top.BackgroundTransparency = 1
Instance.new("UIStroke",top).Color = Color3.fromRGB(40,40,40)

local closebtn = Instance.new("TextButton",top)
closebtn.BackgroundTransparency = 1
closebtn.Size = UDim2.new(0.1,0,1,0)
closebtn.Position = UDim2.new(0.9,0,0,0)
closebtn.Text = "X"
closebtn.TextColor3 = Color3.fromRGB(200,200,200)
closebtn.TextScaled = true

local togglebtn = Instance.new("TextButton",top)
togglebtn.BackgroundTransparency = 1
togglebtn.Size = UDim2.new(0.1,0,1,0)
togglebtn.Position = UDim2.new(0.82,0,0,0)
togglebtn.Text = "↑↓"
togglebtn.TextColor3 = Color3.fromRGB(200,200,200)
togglebtn.TextScaled = true

local text = Instance.new("TextLabel",top)
text.BackgroundTransparency = 1
text.Size = UDim2.new(0.65,0,0.7,0)
text.Position = UDim2.new(0,0,0.15,0)
text.Text = "Movement hacks"
text.TextColor3 = Color3.fromRGB(200,200,200)
text.TextScaled = true

local main = Instance.new("ScrollingFrame",bg)
main.BackgroundTransparency = 1
main.Size = UDim2.new(1,0,0.8,0)
main.Position = UDim2.new(0,0,0.1,0)
main.ScrollBarThickness = 5
main.ElasticBehavior = Enum.ElasticBehavior.Never
main.AutomaticCanvasSize = Enum.AutomaticSize.Y
local layout = Instance.new("UIListLayout",main)
layout.Padding = UDim.new(0,5)
layout.SortOrder = Enum.SortOrder.LayoutOrder
local padding = Instance.new("UIPadding",main)
padding.PaddingLeft = UDim.new(0.03,0)
padding.PaddingRight = UDim.new(0.07,0)

-- GUI FUNCTIONALITY --

local ts = game:GetService("TweenService")
local toggleInfo = TweenInfo.new(0.7,Enum.EasingStyle.Quad,Enum.EasingDirection.InOut,0,false)
local toggleClose = ts:Create(bg,toggleInfo,{Position = UDim2.new(0.73,0,0.967,0)})
local toggleOpen = ts:Create(bg,toggleInfo,{Position = UDim2.new(0.73,0,0.52,0)})

local toggleDebounce = false
closebtn.MouseButton1Down:Connect(function()
	toggleDebounce = true
	ts:Create(bg,TweenInfo.new(0.5,Enum.EasingStyle.Quart,Enum.EasingDirection.Out,0,false),{Position = UDim2.new(0.73,0,1.02,0)}):Play()
	wait(0.5)
	gui:Destroy()
	script:Destroy()
end)
local minimized = true
togglebtn.MouseButton1Down:Connect(function()
	if not toggleDebounce then
		toggleDebounce = true
		minimized = not minimized
		if minimized then
			toggleClose:Play()
		else
			toggleOpen:Play()
		end
		wait(0.7)
		toggleDebounce = false
	end
end)

uis.InputBegan:Connect(function(input,gpe)
	if not gpe and (input.KeyCode == Enum.KeyCode.BackSlash or input.KeyCode == Enum.KeyCode.Semicolon) then
		modalButton.Visible = true
	end
end)
uis.InputEnded:Connect(function(input,gpe)
	if not gpe and (input.KeyCode == Enum.KeyCode.BackSlash or input.KeyCode == Enum.KeyCode.Semicolon) then
		modalButton.Visible = false
	end
end)

-- CREATING ROWS --

local teleportRow = input:Clone()
teleportRow.Visible = true
teleportRow.Parent = main
teleportRow.LayoutOrder = 0
teleportRow.desc.Text = "Teleport to"
teleportRow.box.Size = UDim2.new(0,110,1,0)
teleportRow.box.FocusLost:Connect(function(i,enter)
	local name = string.lower(teleportRow.box.Text)
	if name ~= "" and enter then
		local fullname = nil
		local partname = nil
		for _,player in pairs(players:GetChildren()) do
			local plrname = string.lower(player.Name)
			if string.match(plrname,name) then
				if plrname == name then
					fullname = player
				else
					partname = player
				end
			end
		end
		if fullname then
			local hmrp = fullname:FindFirstChild("Character"):FindFirstChild("HumanoidRootPart") or nil
			if hmrp then
				hrp.CFrame = hmrp.CFrame
				return
			end
		end
		if partname then
			local hmrp = fullname:FindFirstChild("Character"):FindFirstChild("HumanoidRootPart") or nil
			if hmrp then
				hrp.CFrame = hmrp.CFrame
			end
		end
	end
end)

local setSpeed = hmd.WalkSpeed
local walkspeedRow = input:Clone()
walkspeedRow.Visible = true
walkspeedRow.Parent = main
walkspeedRow.LayoutOrder = 1
walkspeedRow.desc.Text = "Walkspeed"
walkspeedRow.box.Text = math.round(setSpeed*10)/10
walkspeedRow.box.FocusLost:Connect(function()
	local num = math.round(tonumber(walkspeedRow.box.Text)*10)/10
	walkspeedRow.box.Text = num
	if num then
		setSpeed = num
		hmd.WalkSpeed = num
	end
end)
hmd:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
	wait()
	if hmd.WalkSpeed ~= setSpeed then
		hmd.WalkSpeed = setSpeed
	end
end)

local setJumpheight = hmd.JumpHeight
local jumpheightRow = input:Clone()
jumpheightRow.Visible = true
jumpheightRow.Parent = main
jumpheightRow.LayoutOrder = 2
jumpheightRow.desc.Text = "Jump height"
jumpheightRow.box.Text = math.round(setJumpheight*10)/10
jumpheightRow.box.FocusLost:Connect(function()
	local num = math.round(tonumber(jumpheightRow.box.Text)*10)/10
	jumpheightRow.box.Text = num
	if num then
		setJumpheight = num
		hmd.JumpHeight = num
	end
end)
hmd:GetPropertyChangedSignal("JumpHeight"):Connect(function()
	wait()
	if hmd.JumpHeight ~= setJumpheight then
		hmd.JumpHeight = setJumpheight
	end
end)

local flyFunction1
local flyFunction2
local flyHoldingW = false
local flyHoldingA = false
local flyHoldingS = false
local flyHoldingD = false
local flyRow = toggle:Clone()
flyRow.Visible = true
flyRow.Parent = main
flyRow.LayoutOrder = 3
flyRow.desc.Text = "Fly"
flyhider = flyRow.button.hider
flyRow.button.MouseButton1Down:Connect(function()
	if ghosthider.Visible then
		flyhider.Visible = not flyhider.Visible
		if flyhider.Visible == false then
			hrp.Anchored = true
			flyFunction1 = uis.InputBegan:Connect(function(input,gpe)
				if not gpe then
					if input.KeyCode == Enum.KeyCode.W then
						flyHoldingW = true
						repeat
							task.wait()
							hrp.CFrame = cam.CFrame + (hrp.Position - cam.CFrame.Position)
							hrp.CFrame += hrp.CFrame.LookVector * 1
						until not flyHoldingW or flyhider.Visible
						flyHoldingW = false
					elseif input.KeyCode == Enum.KeyCode.S then
						flyHoldingS = true
						repeat
							task.wait()
							hrp.CFrame = cam.CFrame + (hrp.Position - cam.CFrame.Position)
							hrp.CFrame += hrp.CFrame.LookVector * -1
						until not flyHoldingS or flyhider.Visible
						flyHoldingS = false
					elseif input.KeyCode == Enum.KeyCode.A then
						flyHoldingA = true
						repeat
							task.wait()
							hrp.CFrame = cam.CFrame + (hrp.Position - cam.CFrame.Position)
							hrp.CFrame *= CFrame.new(-1,0,0)
						until not flyHoldingA or flyhider.Visible
						flyHoldingA = false
					elseif input.KeyCode == Enum.KeyCode.D then
						flyHoldingD = true
						repeat
							task.wait()
							hrp.CFrame = cam.CFrame + (hrp.Position - cam.CFrame.Position)
							hrp.CFrame *= CFrame.new(1,0,0)
						until not flyHoldingD or flyhider.Visible
						flyHoldingD = false
					end
				end
			end)
			flyFunction2 = uis.InputEnded:Connect(function(input)
				if input.KeyCode == Enum.KeyCode.W then
					flyHoldingW = false
				elseif input.KeyCode == Enum.KeyCode.A then
					flyHoldingA = false
				elseif input.KeyCode == Enum.KeyCode.S then
					flyHoldingS = false
				elseif input.KeyCode == Enum.KeyCode.D then
					flyHoldingD = false
				end
			end)
		else
			hrp.Anchored = false
			flyFunction1:Disconnect()
			flyFunction2:Disconnect()
		end
	end
end)

local ghostPart = Instance.new("Part",workspace)
ghostPart.Size = Vector3.new(1,1,1)
ghostPart.Transparency = 0.8
ghostPart.Anchored = true
ghostPart.CanQuery = false
ghostPart.CanCollide = false
ghostPart.CanTouch = false
local ghostFunction1
local ghostFunction2
local ghostHoldingW = false
local ghostHoldingA = false
local ghostHoldingS = false
local ghostHoldingD = false
local ghostRow = toggle:Clone()
ghostRow.Visible = true
ghostRow.Parent = main
ghostRow.LayoutOrder = 4
ghostRow.desc.Text = "Ghost"
ghosthider = ghostRow.button.hider
ghostRow.button.MouseButton1Down:Connect(function()
	if flyhider.Visible then
		ghosthider.Visible = not ghosthider.Visible
		if ghosthider.Visible == false then
			cam.CameraSubject = ghostPart
			ghostPart.CFrame = hrp.CFrame
			hrp.Anchored = true
			ghostFunction1 = uis.InputBegan:Connect(function(input,gpe)
				if not gpe then
					if input.KeyCode == Enum.KeyCode.W then
						ghostHoldingW = true
						repeat
							task.wait()
							ghostPart.CFrame = cam.CFrame + (ghostPart.Position - cam.CFrame.Position)
							ghostPart.CFrame += ghostPart.CFrame.LookVector * 1
						until not ghostHoldingW or ghosthider.Visible
						ghostHoldingW = false
					elseif input.KeyCode == Enum.KeyCode.S then
						ghostHoldingS = true
						repeat
							task.wait()
							ghostPart.CFrame = cam.CFrame + (ghostPart.Position - cam.CFrame.Position)
							ghostPart.CFrame += ghostPart.CFrame.LookVector * -1
						until not ghostHoldingS or ghosthider.Visible
						ghostHoldingS = false
					elseif input.KeyCode == Enum.KeyCode.A then
						ghostHoldingA = true
						repeat
							task.wait()
							ghostPart.CFrame = cam.CFrame + (ghostPart.Position - cam.CFrame.Position)
							ghostPart.CFrame *= CFrame.new(-1,0,0)
						until not ghostHoldingA or ghosthider.Visible
						ghostHoldingA = false
					elseif input.KeyCode == Enum.KeyCode.D then
						ghostHoldingD = true
						repeat
							task.wait()
							ghostPart.CFrame = cam.CFrame + (ghostPart.Position - cam.CFrame.Position)
							ghostPart.CFrame *= CFrame.new(1,0,0)
						until not ghostHoldingD or ghosthider.Visible
						ghostHoldingD = false
					end
				end
			end)
			ghostFunction2 = uis.InputEnded:Connect(function(input)
				if input.KeyCode == Enum.KeyCode.W then
					ghostHoldingW = false
				elseif input.KeyCode == Enum.KeyCode.A then
					ghostHoldingA = false
				elseif input.KeyCode == Enum.KeyCode.S then
					ghostHoldingS = false
				elseif input.KeyCode == Enum.KeyCode.D then
					ghostHoldingD = false
				end
			end)
		else
			cam.CameraSubject = hmd
			hrp.Anchored = false
			ghostFunction1:Disconnect()
			ghostFunction2:Disconnect()
		end
	end
end)

local infjumpFunction
local infjumpRow = toggle:Clone()
infjumpRow.Visible = true
infjumpRow.Parent = main
infjumpRow.desc.Text = "Infinite jump"
infjumpRow.LayoutOrder = 5
local infjumphider = infjumpRow.button.hider
local safeinfjumphider
infjumpRow.button.MouseButton1Down:Connect(function()
	if safeinfjumphider.Visible then
		infjumphider.Visible = not infjumphider.Visible
		if infjumphider.Visible == false then
			infjumpFunction = uis.JumpRequest:Connect(function()
				hmd:ChangeState(Enum.HumanoidStateType.Jumping,true)
			end)
		else
			infjumpFunction:Disconnect()
		end
	end
end)

local safeinfjumpFunction
local safeinfjumpRow = toggle:Clone()
safeinfjumpRow.Visible = true
safeinfjumpRow.Parent = main
safeinfjumpRow.desc.Text = "Safe infinite jump"
safeinfjumpRow.LayoutOrder = 6
safeinfjumphider = safeinfjumpRow.button.hider
safeinfjumpRow.button.MouseButton1Down:Connect(function()
	if infjumphider.Visible then
		safeinfjumphider.Visible = not safeinfjumphider.Visible
		if safeinfjumphider.Visible == false then
			safeinfjumpFunction = uis.JumpRequest:Connect(function()
				hmd:ChangeState(Enum.HumanoidStateType.Landed,true)
				task.wait()
				hmd:ChangeState(Enum.HumanoidStateType.Jumping,true)
			end)
		else
			safeinfjumpFunction:Disconnect()
		end
	end
end)

local clicktpFunction1
local clicktpFunction2
local clicktpFunction3
local clicktpHolding = false
for i,v in pairs(workspace:GetDescendants()) do
	if v:IsA("BasePart") and v.CanCollide == false then
		v.CanQuery = false
		v:GetPropertyChangedSignal("CanQuery"):Connect(function()
			v.CanQuery = false
		end)
	end
end
workspace.ChildAdded:Connect(function(child)
	wait(1)
	if child:IsA("BasePart") and child.CanCollide == false then
		child.CanQuery = false
		child:GetPropertyChangedSignal("CanQuery"):Connect(function()
			child.CanQuery = false
		end)
	end
end)
local clicktpRow = toggle:Clone()
clicktpRow.Visible = true
clicktpRow.Parent = main
clicktpRow.LayoutOrder = 7
clicktpRow.desc.Text = "Ctrl click tp"
local clicktphider = clicktpRow.button.hider
clicktpRow.button.MouseButton1Down:Connect(function()
	clicktphider.Visible = not clicktphider.Visible
	if clicktphider.Visible == false then
		clicktpFunction1 = uis.InputBegan:Connect(function(input)
			if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
				clicktpHolding = true
			end
		end)
		clicktpFunction2 = uis.InputEnded:Connect(function(input)
			if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
				clicktpHolding = false
			end
		end)
		clicktpFunction3 = mouse.Button1Down:Connect(function()
			if clicktpHolding then
				hrp.CFrame = mouse.Hit * CFrame.new(0,4,0)
			end
		end)
	else
		clicktpFunction1:Disconnect()
		clicktpFunction2:Disconnect()
		clicktpFunction3:Disconnect()
	end
end)

for i,v in pairs(chr:GetChildren()) do
	if v:IsA("MeshPart") then
		v.CanQuery = false
		v:GetPropertyChangedSignal("CanQuery"):Connect(function()
			v.CanQuery = false
		end)
	end
end
local noclipRow = toggle:Clone()
local nocliphider = noclipRow.button.hider
local standardCancollide = {}
for i,v in pairs(chr:GetChildren()) do
	if (v:IsA("MeshPart") or v:IsA("Part")) and v.CanCollide then
		table.insert(standardCancollide,v)
		v:GetPropertyChangedSignal("CanCollide"):Connect(function()
			if nocliphider.Visible == false then
				v.CanCollide = false
			end
		end)
	end
end
noclipRow.Visible = true
noclipRow.Parent = main
noclipRow.LayoutOrder = 8
noclipRow.desc.Text = "Noclip"
noclipRow.button.MouseButton1Down:Connect(function()
	nocliphider.Visible = not nocliphider.Visible
	if nocliphider.Visible == false then
		for i,v in pairs(chr:GetChildren()) do
			if v:IsA("MeshPart") or v:IsA("Part") then
				v.CanCollide = false
			end
		end
		repeat
			wait()
			for i,v in pairs(standardCancollide) do
				if v.CanCollide then
					v.CanCollide = false
				end
			end
		until nocliphider.Visible
	else
		for i,v in pairs(standardCancollide) do
			v.CanCollide = true
		end
	end
end)

local anchorRow = toggle:Clone()
anchorRow.Visible = true
anchorRow.Parent = main
anchorRow.LayoutOrder = 9
anchorRow.desc.Text = "Anchor body"
local anchorhider = anchorRow.button.hider
anchorRow.button.MouseButton1Down:Connect(function()
	anchorhider.Visible = not anchorhider.Visible
	if anchorhider.Visible == false then
		hrp.Anchored = true
	elseif flyhider.Visible and ghosthider.Visible then
		hrp.Anchored = false
	end
end)
hrp:GetPropertyChangedSignal("Anchored"):Connect(function()
	if anchorhider.Visible == false then
		hrp.Anchored = true
	end
end) 

local fullname = nil
local partname = nil
local targetRow = teleportRow:Clone()
targetRow.LayoutOrder = 10
targetRow.desc.Text = "Player to follow"
targetRow.box.FocusLost:Connect(function(i,enter)
	local name = string.lower(targetRow.box.Text)
	if name ~= "" and enter then
		fullname = nil
		partname = nil
		for _,player in pairs(players:GetChildren()) do
			local plrname = string.lower(player.Name)
			if string.match(plrname,name) then
				if plrname == name then
					fullname = player
				else
					partname = player
				end
			end
		end
	end
end)

local followRow = toggle:Clone()
followRow.Visible = true
followRow.Parent = main
followRow.LayoutOrder = 11
followRow.desc.Text = "Follow player"
local followhider = followRow.button.hider
followRow.button.MouseButton1Down:Connect(function()
	followhider.Visible = not followhider.Visible
	if followhider.Visible then
		if fullname then
			local hmrp = fullname:FindFirstChild("Character"):FindFirstChild("HumanoidRootPart") or nil
			repeat
				task.wait()
				if hmrp then
					hrp.CFrame = hmrp.CFrame
				else
					wait()
					hmrp = fullname:FindFirstChild("Character"):FindFirstChild("HumanoidRootPart") or nil
				end
			until not followhider.Visible
		end
		elseif partname then
		local hmrp = partname:FindFirstChild("Character"):FindFirstChild("HumanoidRootPart") or nil
			repeat
				task.wait()
				if hmrp then
					hrp.CFrame = hmrp.CFrame
				else
					wait()
					hmrp = partname:FindFirstChild("Character"):FindFirstChild("HumanoidRootPart") or nil
				end
			until not followhider.Visible
		end
	end
end)

hmd.Died:Connect(function()
	for i,v in pairs(main:GetChildren()) do
		if v.Name == "toggle" and v.button.hider.Visible == false then
			v.button.hider.Visible = true
		end
	end
end)
